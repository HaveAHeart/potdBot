import configparser
import random
import time
import nhentai
import psycopg2
import requests
import vk_api
import re
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.utils import get_random_id


config = configparser.ConfigParser()
config.read('params.ini')
tkn = config['VK_MSG']['token']
session = config['VK_MSG']['session']
key = config['VK_MSG']['key']
server = config['VK_MSG']['server']
ts = config['VK_MSG']['ts']

randomMsg = ['–ù–æ–≤—ã–π –ø–∏–¥–æ—Ä –¥–Ω—è: @id{0}({1} {2}),\n –∞ –µ–≥–æ –ª–∏—á–Ω—ã–π –ø–∞—Å—Å–∏–≤: @id{3}({4} {5})\n',
             '–¢–µ–∫—É—â–∏–π –ø–∏–¥–æ—Ä –¥–Ω—è: @id{0}({1} {2}),\n –∞ –µ–≥–æ –ª–∏—á–Ω—ã–π –ø–∞—Å—Å–∏–≤: @id{3}({4} {5})\n'
             '–ê –ø–æ—Ç–æ–º —É –Ω–∏—Ö –±—ã–ª–æ –º–Ω–æ–≥–æ —Å–µ–∫—Å–∞, –Ω–æ –º—ã —ç—Ç–æ –Ω–µ –ø–æ–∫–∞–∂–µ–º...\n',
             '–°–ê–ú–û–û–¢–°–û–°!\n',
             '–°–∏—Å—Ç–µ–º–∞ –ø–æ–∏—Å–∫–∞ –ø–∏–¥–æ—Ä–∞—Å–æ–≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞']
statMsg = ['–ò—Ç–æ–≥–æ, —Å—Ç–∞—Ç–∞:\n',
           '@id{0}({1} {2}):  –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑: {3}\n']
regMsg = ['–ê —Ç—ã —É–∂–µ)0))\n',
          '–Ø –∑–∞–ø–∏—Å–∞–ª @id{0}(—Ç–µ–±—è) –≤ —Ç–µ—Ç—Ä–∞–¥–æ—á–∫—É...\n']
godovaliyMsg = ['–ù–æ–≤—ã–π –≥–æ–¥–æ–≤–∞–ª—ã–π:\n @id{0}({1} {2})\n',
                '–¢–µ–∫—É—â–∏–π –≥–æ–¥–æ–≤–∞–ª—ã–π:\n @id{0}({1} {2})\n']
helpMsg = ['–°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥:\n\n'
           ' ‚Ä¢ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/—Ä–µ–≥–∞ - –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ø–∏–¥–æ—Ä–∞—Å—ã\n'
           ' ‚Ä¢ —Ä–∞–Ω–¥–æ–º - –≤—Ä–∞—â–∞–π—Ç–µ –±–∞—Ä–∞–±–∞–Ω\n'
           ' ‚Ä¢ –≥–æ–¥–æ–≤–∞–ª—ã–π - –ø–æ–¥–µ–±–∏—Ç–µ–ª—å –≥–æ–¥–∞\n'
           ' ‚Ä¢ —Å—Ç–∞—Ç–∞/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - —Å—á–µ—Ç –¥—Ä–µ–≤–Ω–∏—Ö —à–∏–∑–æ–≤\n\n'
           ' ‚Ä¢ —Ö–æ—Ä–Ω–∏ - üåö\n\n'
           ' ‚Ä¢ –±–æ–Ω—å–∫ - –ø—Ä–æ–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ—á–∫—É –±–æ–Ω—å–∫ (—Ü–µ–ª—å –∑–∞–¥–∞—ë—Ç—Å—è —á–µ—Ä–µ–∑ "@")\n'
           ' –í—Å–µ –∫–æ–º–º–∞–Ω–¥—ã –ø—Ä–æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ @piwass']
morgMsg = ['–¢—É—Ç –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –±—ã—Ç—å —Ç—Ä–µ–∫–∏ –º–æ—Ä–≥–µ–Ω–∞, –Ω–æ @deffichento(–¥–∞–Ω–Ω—ã–π –≥–æ—Å–ø–æ–¥–∏–Ω) –Ω–∞–ª–æ–∂–∏–ª –Ω–∞ –Ω–µ–≥–æ –≤–µ—Ç–æ']
packeticMsg = ['–° –≤–∞—Å 5 —Ä—É–±–ª–µ–π']
hornyServMsg = ['nhentai.net/g/{}',
                '–ù–µ –º–æ–≥—É –∑–∞–∫–æ–Ω–Ω–µ–∫—Ç–∏—Ç—å—Å—è. –¢—ã–∫–∞–π @deffichento, —á—Ç–æ–± –ø–æ–¥—Ä—É–±–∏–ª –≤–ø–Ω\n']
bonkMsg = ['{} –¥–∞—ë—Ç {} –¥—É–±–∏–Ω–∫–æ–π –ø–æ –≥–æ–ª–æ–≤–µ\n',
           '{} –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç —Å–¥–µ–ª–∞—Ç—å –∫–æ–≥–æ-—Ç–æ –º–µ–Ω–µ–µ —Ö–æ—Ä–Ω–∏, –Ω–æ –Ω–µ –∑–Ω–∞–µ—Ç, –∫–æ–≥–æ\n']
with open('horny_intro.txt', 'r', encoding="utf-8") as f:
    hornyFirstMsg = f.readlines()

AUDIO_LIST_P = [
    [149642725, 456240733],
    [149642725, 456240540],
    [149642725, 456240537],
    [149642725, 456239941],
    [149642725, 456240255],
    [149642725, 456239961],
    [149642725, 456240281]
]


def register(conn, userid, chatid, name, surname):
    sql = "SELECT * FROM pidorbot.register(%s, %s, %s, %s);"
    print('–∫—Ç–æ-—Ç–æ —Ä–µ–≥–∞–µ—Ç—Å—è...\n')

    cur = conn.cursor()
    cur.execute(sql, (userid, chatid, name, surname))
    conn.commit()
    row = cur.fetchone()
    cur.close()
    return row


def randomize(conn, chatid):
    sql = "SELECT * FROM pidorbot.randomize(%s);"
    print('–∫—Ç–æ-—Ç–æ —Ä–∞–Ω–¥–æ–º–∏—Ç –æ–±—ã—á–Ω–æ–≥–æ...\n')

    cur = conn.cursor()
    cur.execute(sql, (chatid,))
    conn.commit()
    ret = cur.fetchone()
    cur.close()
    return ret


def godovaliy(conn, chatid):
    sql = "SELECT * FROM pidorbot.godovaliy(%s);"
    print('–∫—Ç–æ-—Ç–æ —Ä–∞–Ω–¥–æ–º–∏—Ç –≥–æ–¥–æ–≤–∞–ª–æ–≥–æ...\n')

    cur = conn.cursor()
    cur.execute(sql, (chatid,))
    conn.commit()
    ret = cur.fetchone()
    cur.close()
    return ret


def stats(conn, chatid):
    sql = "SELECT * FROM pidorbot.stats(%s);"
    print('–∫—Ç–æ-—Ç–æ –ø—Ä–æ—Å–∏—Ç —Å—Ç–∞—Ç—É...\n')

    cur = conn.cursor()
    cur.execute(sql, (chatid,))
    conn.commit()
    ret = []
    row = cur.fetchone()
    while row is not None:
        ret.append(row)
        row = cur.fetchone()
    cur.close()
    return ret


def send_vk_msg(vk, event, msg, attachment):
    if attachment is None:
        vk.messages.send(
            key=key,
            server=server,
            ts=ts,
            random_id=get_random_id(),
            message=msg,
            chat_id=event.chat_id
        )
    else:
        vk.messages.send(
            key=key,
            server=server,
            ts=ts,
            random_id=get_random_id(),
            message=msg,
            attachment=attachment,
            chat_id=event.chat_id
        )


def get_name(vk, from_id):
    info = vk.users.get(user_ids=from_id)[0]
    return [info.get('first_name'), info['last_name']]


def runBot():
    host = config['DB']['host']
    database = config['DB']['database']
    user = config['DB']['user']
    password = config['DB']['password']
    conn = psycopg2.connect(host=host, database=database, user=user, password=password)

    while True:
        try:
            vk_session = vk_api.VkApi(token=tkn)
            longpoll = VkBotLongPoll(vk_session, session)
            vk = vk_session.get_api()

            for event in longpoll.listen():
                if event.type == VkBotEventType.MESSAGE_NEW:
                    if any(cmd in str(event) for cmd in ('—Ä–∞–Ω–¥–æ–º', 'hfyljv')):
                        if event.from_chat:
                            cid = event.chat_id
                            ret = randomize(conn, cid)
                            if ret[0]:
                                msg = randomMsg[0].format(ret[1], ret[2], ret[3], ret[4], ret[5], ret[6])
                            else:
                                msg = randomMsg[1].format(ret[1], ret[2], ret[3], ret[4], ret[5], ret[6])

                            if ret[1] == ret[4]:
                                msg = msg + randomMsg[2]

                            send_vk_msg(vk, event, randomMsg[3], None)
                            send_vk_msg(vk, event, msg, None)

                    if any(cmd in str(event) for cmd in ('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'cnfnbcnbrf', '—Å—Ç–∞—Ç–∞', 'cnfnf')):
                        if event.from_chat:
                            cid = event.chat_id
                            ret = stats(conn, cid)
                            msg = statMsg[0]
                            for row in ret:
                                msg = msg + statMsg[1].format(row[0], row[1], row[2], row[3])

                            send_vk_msg(vk, event, msg, None)

                    if any(cmd in str(event) for cmd in ('—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', 'htubcnhfwbz', '—Ä–µ–≥–∞', 'htuf')):
                        if event.from_chat:
                            uid = event.object.get('from_id')
                            cid = event.chat_id
                            name_surname = get_name(vk, uid)
                            ret = register(conn, uid, cid, name_surname[0], name_surname[1])
                            if ret[0]:
                                msg = regMsg[0]
                            else:
                                msg = regMsg[1].format(uid)

                            send_vk_msg(vk, event, msg, None)

                    if any(cmd in str(event) for cmd in ('–≥–æ–¥–æ–≤–∞–ª—ã–π', 'ujljdfksq')):
                        cid = event.chat_id
                        ret = godovaliy(conn, cid)
                        if ret[0]:
                            msg = godovaliyMsg[0].format(ret[1], ret[2], ret[3])
                        else:
                            msg = godovaliyMsg[1].format(ret[1], ret[2], ret[3])

                        send_vk_msg(vk, event, msg, None)

                    if any(cmd in str(event) for cmd in ('–ø–æ–º–æ—â—å', 'gjvjom', '—Ö–µ–ª–ø–∞', '[tkgf')):
                        if event.from_chat:
                            msg = helpMsg[0]

                            send_vk_msg(vk, event, msg, None)

                    if any(cmd in str(event) for cmd in ('–º–æ—Ä–≥–µ–Ω—à—Ç–µ—Ä–Ω', '–º–æ—Ä–≥–µ–Ω', 'morgenshtern', 'MORGENSHTERN')):
                        if event.from_chat:
                            send_vk_msg(vk, event, morgMsg[0], None)

                    if any(cmd in str(event) for cmd in ('–¥–∞–π—Ç–µ –ø–∞–∫–µ—Ç–∏–∫', 'pathetic', '–ø–∞–∫–µ—Ç')):
                        if event.from_chat:
                            random_audio = random.choice(AUDIO_LIST_P)
                            att = f"audio{random_audio[0]}_{random_audio[1]}"

                            send_vk_msg(vk, event, packeticMsg[0], att)

                    if any(cmd in str(event) for cmd in ('bonk', '–±–æ–Ω—å–∫')):
                        if event.from_chat:
                            target = re.findall(r"(\[(id|club)[1-9]+\|@\w+\])", event.object.get('text'))
                            print(target)
                            print(event.object.get('text'))

                            uid = event.object.get('from_id')
                            name_surname = " ".join(get_name(vk, uid))

                            if len(target) == 1:
                                send_vk_msg(vk, event, bonkMsg[1].format(name_surname), None)
                            else:
                                send_vk_msg(vk, event, bonkMsg[0].format(name_surname, target[1][0]), None)

                    if any(cmd in str(event) for cmd in ('horny', '—Ö–æ—Ä–Ω–∏', '–ø—Ä–æ–Ω')):
                        if event.from_chat:
                            try:
                                nhid = nhentai.get_random_id()
                                dj = nhentai.get_doujin(nhid)
                                tags_raw = dj.tags
                                artists = []
                                tags = []
                                langs = []
                                hmsg = ""
                                for tag in tags_raw:
                                    if tag.type == 'tag':
                                        tags.append(tag.name)
                                    if tag.type == 'language':
                                        langs.append(tag.name)
                                    if tag.type == 'artist':
                                        artists.append(tag.name)
                                hmsg = hmsg + '–ê–≤—Ç–æ—Ä—ã: ' + ", ".join(artists) + "\n"
                                hmsg = hmsg + '–Ø–∑—ã–∫–∏: ' + ", ".join(langs) + "\n"
                                hmsg = hmsg + '–¢—ç–≥–∏: ' + ", ".join(tags) + "\n"

                                send_vk_msg(vk, event, random.choice(hornyFirstMsg), None)
                                send_vk_msg(vk, event, hornyServMsg[0].format(nhid), None)
                                send_vk_msg(vk, event, hmsg, None)

                            except:
                                send_vk_msg(vk, event, random.choice(hornyFirstMsg), None)
                                send_vk_msg(vk, event, hornyServMsg[1], None)

        except requests.exceptions.ReadTimeout:
            print("\n –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º –í–ö \n")
            time.sleep(3)
        except requests.exceptions.ConnectionError:
            print("\n –ë–µ–¥—ã —Å –∫–æ–Ω–Ω–µ–∫—à–Ω–æ–º, –æ–ø—è—Ç—å –∏–≥—Ä–∞–µ—à—å—Å—è —Å –í–ü–ù–æ–º? \n")
            time.sleep(3)
        except:
            print("\n –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –ê–®–ò–ü–ö–ê –ê–¢–¢–ï–ù–®–û–ù \n")

            time.sleep(3)


if __name__ == '__main__':
    print('bot started!')
    runBot()
